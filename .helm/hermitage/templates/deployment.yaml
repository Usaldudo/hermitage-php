{{- $php := index .Values.image "php" -}}
{{- $nginx := index .Values.image "nginx" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "default.fullname" . }}
  labels:
    {{- include "default.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "default.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "default.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-php
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ $php.repository }}:{{ $php.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - php-fpm
          volumeMounts:
            - name: shared-data
              mountPath: /app
            - name: dotenv
              mountPath: /app/.env
              subPath: .env
              readOnly: true
            - name: storage
              mountPath: /app/storage
          resources:
            {{- toYaml .Values.resources.php | nindent 12 }}
        - name: {{ .Chart.Name }}-nginx
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ $nginx.repository }}:{{ $nginx.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - nginx
            - -g
            - daemon off;
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          ports:
            - name: {{ .Values.service.name }}
              containerPort: {{ .Values.service.port | int }}
              protocol: TCP
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
          resources:
            {{- toYaml .Values.resources.nginx | nindent 12 }}
        - name: {{ .Chart.Name }}-nginx-metrics
          image: nginx/nginx-prometheus-exporter:0.11
          imagePullPolicy: IfNotPresent
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          ports:
            - name: {{ .Values.service.metrics.name }}
              containerPort: {{ .Values.service.metrics.port | int }}
              protocol: TCP
          args: [
            "-nginx.scrape-uri", "http://localhost:8088/nginx_status"
          ]
          resources:
            {{- toYaml .Values.resources.exporter | nindent 12 }}
      volumes:
      - name: nginx-config
        configMap:
          name: {{ include "default.fullname" . }}-nginx-config
          items:
            - key: nginx.conf
              path: nginx.conf
      - name: shared-data
        emptyDir: {}
      - name: dotenv
        secret:
          secretName: {{ include "default.fullname" . }}-dotenvfile
          items:
          - key: .env
            path: .env
      - name: storage
        persistentVolumeClaim:
          claimName: {{ include "default.fullname" . }}-pvc
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
